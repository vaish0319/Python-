 "# 31)Print  following pattern: \n",
        "# 1\n",
        "# 22\n",
        "# 333\n",
        "# 4444\n",
        "# 55555\n",
        "# 666666\n",
        "# 7777777\n",
        "# 88888888\n",
        "# 999999999\n",
        "for i in range(10):\n",
        "    print(str(i) * i)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "1\n",
            "22\n",
            "333\n",
            "4444\n",
            "55555\n",
            "666666\n",
            "7777777\n",
            "88888888\n",
            "999999999\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pGUjF88dSmRl",
        "outputId": "baa90d4d-cbd9-46e9-8615-a6528da0836c"
      },
      "source": [
        "'''32)Print  following pattern: \n",
        "1\n",
        "12\n",
        "123\n",
        "1234\n",
        "12345\n",
        "123456\n",
        "1234567\n",
        "12345678\n",
        "123456789'''\n",
        "for i in range(1,9+1):\n",
        "    for j in range(1, i+1):\n",
        "        print(j, end=\"\")\n",
        "    print()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n",
            "12\n",
            "123\n",
            "1234\n",
            "12345\n",
            "123456\n",
            "1234567\n",
            "12345678\n",
            "123456789\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-a4vrAKDSl9U",
        "outputId": "095ed021-112b-41df-97d9-7b7f060853ee"
      },
      "source": [
        "'''33)Print following pattern: \n",
        "A\n",
        "BB\n",
        "CCC\n",
        "DDDD\n",
        "EEEEE\n",
        "FFFFFF\n",
        "GGGGGGG\n",
        "HHHHHHHH'''\n",
        "\n",
        "for i in range(8):    \n",
        "      print((chr(65+i)+\"\")*(i+1))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A\n",
            "BB\n",
            "CCC\n",
            "DDDD\n",
            "EEEEE\n",
            "FFFFFF\n",
            "GGGGGGG\n",
            "HHHHHHHH\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1w6x3M4GSlWm",
        "outputId": "f74e85c2-9f45-4320-e6fb-ae9d99aa8ff4"
      },
      "source": [
        "#34)Write a Python program to calculate the length of a given string.\n",
        "str = \"Amit\"\n",
        "print(len(str))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fVAm6tHp4ifX",
        "outputId": "57946cab-ba2f-43a0-97e4-d1ee377d0126"
      },
      "source": [
        "#35.Write a Python program to get a single string from two given strings, separated by a space and swap the first characters of each string.\n",
        "#Sample String : 'abc', 'xyz' \n",
        "#Expected Result : 'xbc ayz'\n",
        "str1 = input(\"Please Enter First String : \")\n",
        "str2 =input(\"Please Enter Second String : \")\n",
        " \n",
        "x=str1[0:1]\n",
        " \n",
        "str1=str1.replace(str1[0:1],str2[0:1])\n",
        " \n",
        "str2=str2.replace(str2[0:1],x)\n",
        " \n",
        "print(\"Your first string has become :- \",str1)\n",
        "print(\"Your second string has become :- \",str2)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Please Enter First String : amit\n",
            "Please Enter Second String : patel\n",
            "Your first string has become :-  pmit\n",
            "Your second string has become :-  aatel\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UyRAQClv7qWp",
        "outputId": "f00546a0-260d-4c7f-bd95-3f8cd21e9f2e"
      },
